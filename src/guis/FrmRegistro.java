/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import daos.UsuariosDAO;
import exceptions.DAOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetosnegocio.Usuario;

/**
 *
 * @author DssX
 */
public class FrmRegistro extends javax.swing.JFrame {

    private final UsuariosDAO usuariosDAO;
    private static Usuario usuario;
    private final ArrayList<String> listaMusica = new ArrayList<>();
    private final ArrayList<String> listaPeliculas = new ArrayList<>();
    
    public FrmRegistro() {
        usuariosDAO = new UsuariosDAO();
        initComponents();
        usuario = FrmInicio.usuarioLogged;
        this.setLocationRelativeTo(null);
        
        if (usuario != null) {
            this.cargarUsuario();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        dpFechaNacimiento = new com.github.lgooddatepicker.components.DatePicker();
        cboSexo = new javax.swing.JComboBox<>();
        txtCorreo = new javax.swing.JTextField();
        txtContraseña = new javax.swing.JPasswordField();
        cbVer = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMusica = new javax.swing.JTable();
        btnAgregarMusica = new javax.swing.JButton();
        btnEliminarMusica = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPeliculas = new javax.swing.JTable();
        btnAgregarPelicula = new javax.swing.JButton();
        btnEliminarPelicula = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setText("Registrar nuevo Usuario");
        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setText("Nombre*:");

        jLabel3.setText("Fecha de Nacimiento:");

        jLabel4.setText("Sexo:");

        jLabel5.setText("Usuario*:");

        jLabel6.setText("contraseña*:");

        cboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No especificado", "Hombre", "Mujer", "Otro" }));

        cbVer.setText("Ver");
        cbVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVerActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Musica"));

        tblMusica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMusica);

        btnAgregarMusica.setText("Agregar");
        btnAgregarMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMusicaActionPerformed(evt);
            }
        });

        btnEliminarMusica.setText("Eliminar");
        btnEliminarMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMusicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregarMusica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarMusica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAgregarMusica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarMusica)
                .addGap(0, 48, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Peliculas"));

        tblPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPeliculas);

        btnAgregarPelicula.setText("Agregar");
        btnAgregarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPeliculaActionPerformed(evt);
            }
        });

        btnEliminarPelicula.setText("Eliminar");
        btnEliminarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPeliculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregarPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnAgregarPelicula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarPelicula)
                .addGap(0, 48, Short.MAX_VALUE))
        );

        btnRegresar.setText("<-");
        btnRegresar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboSexo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dpFechaNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtContraseña))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbVer))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnRegresar)
                                .addGap(27, 27, 27)
                                .addComponent(lblTitulo)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrar)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitulo)
                    .addComponent(btnRegresar))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dpFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbVer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrar)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        if (usuario != null) {
            FrmMuro abrir = new FrmMuro();
            abrir.setVisible(true);
            this.dispose();
        } else {
            FrmInicio abrir = new FrmInicio();
            abrir.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void cbVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVerActionPerformed
        if(cbVer.isSelected()){
            txtContraseña.setEchoChar((char)0);
        } else {
            txtContraseña.setEchoChar('*');
        }
    }//GEN-LAST:event_cbVerActionPerformed

    private void btnAgregarMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMusicaActionPerformed
        this.registrarMusica();
    }//GEN-LAST:event_btnAgregarMusicaActionPerformed

    private void btnEliminarMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMusicaActionPerformed
        this.eliminarMusica();
    }//GEN-LAST:event_btnEliminarMusicaActionPerformed

    private void btnAgregarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPeliculaActionPerformed
        this.registrarPeliculas();
    }//GEN-LAST:event_btnAgregarPeliculaActionPerformed

    private void btnEliminarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPeliculaActionPerformed
        this.eliminarPelicula();
    }//GEN-LAST:event_btnEliminarPeliculaActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        this.registrar();
    }//GEN-LAST:event_btnRegistrarActionPerformed
    
    /**
     * Valida los campos marcados con asterisco para corroborar que tiene los
     * campos necesarios para crear un registro de usuario nuevo en la base de datos.
     */
    private void registrar(){
        UsuariosDAO usuarioTemp = new UsuariosDAO();
        if (usuario != null && "".equals(txtContraseña.getText())) {
            JOptionPane.showMessageDialog(this, "No deje el campo de contraseña en blanco", "Información", JOptionPane.WARNING_MESSAGE);
        } else if (usuario != null){
            try{
            usuario.setNombre(txtNombreUsuario.getText());
            usuario.setFechaDeNacimiento(dpFechaNacimiento.getDate());
            usuario.setSexo(cboSexo.getSelectedItem().toString());
            usuario.setGenMusicales(listaMusica);
            usuario.setGenPeliculas(listaPeliculas);
            usuario.setCorreo(txtCorreo.getText());
            usuario.setContraseña(txtContraseña.getText());
            usuarioTemp.actualizar(usuario);
            JOptionPane.showMessageDialog(this, "Se A actualizado la informacion", "Información", JOptionPane.INFORMATION_MESSAGE);
            }catch(DAOException ex){
                System.err.println(ex.getMessage());
            } 
        } else {
            if ("".equals(txtCorreo.getText()) || "".equals(txtContraseña.getText()) || "".equals(txtNombreUsuario.getText())) {
            JOptionPane.showMessageDialog(this, "Asegurese de rellenar los campos con asterisco (*)", "Información", JOptionPane.WARNING_MESSAGE);
            } else if (usuarioTemp.buscarPorCorreo(txtCorreo.getText()) != null){
                JOptionPane.showMessageDialog(this, "Este correo ya cuenta con un registro en el sistema", "Información", JOptionPane.WARNING_MESSAGE);
            } else {
                usuariosDAO.guardar(new Usuario(
                    txtNombreUsuario.getText(),
                    dpFechaNacimiento.getDate(),
                    cboSexo.getSelectedItem().toString(),
                    listaMusica,
                    listaPeliculas,
                    txtCorreo.getText(),
                    txtContraseña.getText()));

                FrmInicio abrir = new FrmInicio();
                abrir.setVisible(true);
                this.dispose();
            }
        }
    }
    
    /**
     * validacion de campo no vacio en agregar musica
     */
    private void registrarMusica(){
        String musica = JOptionPane.showInputDialog("Ingrese una cancion");
        listaMusica.add(musica);
        this.cargarTablaMusica();
    }
    
    /**
     * confirmacion de eliminacion de musica
     */
    public void eliminarMusica(){
        int indiceFilaSeleccionada = this.tblMusica.getSelectedRow();
        if(indiceFilaSeleccionada == -1){
            JOptionPane.showMessageDialog(this, "Debes seleccionar una cancion", "Información", JOptionPane.WARNING_MESSAGE);
        } else {
            this.listaMusica.remove(indiceFilaSeleccionada);
            this.cargarTablaMusica();
            JOptionPane.showMessageDialog(this, "Se elimino la cancion", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    /**
     * cargar tabla de canciones de la lista temporal
     */
    private void cargarTablaMusica(){
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblMusica.getModel();
        modeloTabla.setRowCount(0);
        for (int i = 0; i < listaMusica.size(); i++) {
            Object[] fila = {listaMusica.get(i)};
            modeloTabla.addRow(fila);

        }
    }
    
    /**
     * validacion de campo no vacio en agregar pelicula
     */
    private void registrarPeliculas(){
        String pelicula = JOptionPane.showInputDialog("Ingrese una Pelicula");
        listaPeliculas.add(pelicula);
        this.cargarTablaPelicula();
    }
    
    /**
     * confirmacion de eliminacion de la pelicula
     */
    public void eliminarPelicula(){
        int indiceFilaSeleccionada = this.tblPeliculas.getSelectedRow();
        if(indiceFilaSeleccionada == -1){
            JOptionPane.showMessageDialog(this, "Debes seleccionar una Pelicula", "Información", JOptionPane.WARNING_MESSAGE);
        } else {
            this.listaPeliculas.remove(indiceFilaSeleccionada);
            this.cargarTablaPelicula();
            JOptionPane.showMessageDialog(this, "Se elimino la Pelicula", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }
    
    /**
     * cargar tabla de peliculas de la lista temporal
     */
    private void cargarTablaPelicula(){
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblPeliculas.getModel();
        modeloTabla.setRowCount(0);
        for (int i = 0; i < listaPeliculas.size(); i++) {
            Object[] fila = {listaPeliculas.get(i)};
            modeloTabla.addRow(fila);

        }
        
    }
    
    /**
     * en caso de pedir actualizar un usuario se carga la 
     * informacion de la base de datos
     */
    private void cargarUsuario(){
        lblTitulo.setText("Actualizar Datos");
        txtNombreUsuario.setText(usuario.getNombre());
        dpFechaNacimiento.setDate(usuario.getFechaDeNacimiento());
        cboSexo.setSelectedItem(usuario.getSexo());
        txtCorreo.setText(usuario.getCorreo());
        listaMusica.addAll(usuario.getGenMusicales());
        this.cargarTablaMusica();
        listaPeliculas.addAll(usuario.getGenPeliculas());
        this.cargarTablaPelicula();
        btnRegistrar.setText("Actualizar");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarMusica;
    private javax.swing.JButton btnAgregarPelicula;
    private javax.swing.JButton btnEliminarMusica;
    private javax.swing.JButton btnEliminarPelicula;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JCheckBox cbVer;
    private javax.swing.JComboBox<String> cboSexo;
    private com.github.lgooddatepicker.components.DatePicker dpFechaNacimiento;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblMusica;
    private javax.swing.JTable tblPeliculas;
    private javax.swing.JPasswordField txtContraseña;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
